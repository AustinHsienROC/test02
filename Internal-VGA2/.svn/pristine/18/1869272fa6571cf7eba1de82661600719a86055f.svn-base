/*
===================================================================
Name		: CTAApi.h                ╭══╮
Author		: Austin                ╭╯ΘΘ║
Version		: v0.0020               ╰⊙═⊙╯。oо○
Copyright	: Copyright (C) 2014 By oToBrite Electronics Corp.
Description	: This function implement CTA main process.

<Brief>
void CTA_WorkBuf_Allocate( void );                                                    //1.1) Memory alloc [k2/PC compatible]
bool CTA_UpdateLUT(UINT32 a_unParameterID, UCHAR * a_pData, UINT32 a_unDataSize = 0); //1.2) Import LUT, Custom Car data [k2/PC compatible]
bool CTA_UpdateCarInfo(UCHAR * a_pData, UINT32 a_unDataSize);                         //1.3) Custom Car data [ PC Only]
bool CTA_UpdateCarInfo(UINT32 usCarWidth , UINT32 usRearTireToBumper_cm, DOUBLE unSTEER_OVER_FRONT_TIRE_Numerator, DOUBLE unSTEER_OVER_FRONT_TIRE_Denominator, UINT32 usWheelBase_cm);  //3)  Custom Car data [ k2 Only]
void CTA_Reset( void );                                                               //1.4) Reset necessary stack [k2/PC compatible]

void CTA_Process(UCHAR *dst_Y, UCHAR *src_Y, UCHAR *FrameHd);                         //2.1) Process [PC only]
void CTA_Process(ICP_Image *picp_src_Y);                                              //2.2) Process [k2 only]
void CTA_UpdateCarState(UCHAR *FrameHd);  // (Time/Speed/Angle) LUT, Custom Car data  //2.3) Process [k2/PC compatible]

void CTA_WorkBuf_Release(void);                                                       //3.1) Release Heap [k2/PC compatible]

==================================================================
History
--------------+-------------+-----------------------------------------+------------
DATE		  |VERSION      |DESCRIPTION  							  | Author
--------------+-------------+-----------------------------------------+------------
2014/07/09	  | v0.0010  	|First setup functions        	    	  | Austin
--------------+-------------+-----------------------------------------+------------
2014/12/30	  | v0.0020  	|API for K2/PC platform        	    	  | Austin
--------------+-------------+-----------------------------------------+------------
*/

#ifndef _CTAApi_H_
#define _CTAApi_H_

//******************************************************************************
// I N C L U D E   F I L E S
//******************************************************************************

#include "CTA_Type.h"
#include "CTA_Def.h"
#include "CoordinateConversion.h"
#ifndef _WIN32
  #include "ICP_Image.hpp"
#endif


//******************************************************************************
// E X T E R N A L   V A R I A B L E   P R O T O T Y P E S
//******************************************************************************
extern UCHAR CTAAlarmState;//isCTAAlarm ;
extern CandidateRec CTACandidateL [ MAXCandidateNum ];
extern CandidateRec CTACandidateR [ MAXCandidateNum ];

#ifdef _WIN32
    extern char g_FrameReport[ 500 ];      ///< RemoteCtrl Debug Info
	extern int g_FrameReportIdx;//used index for g_FrameReport
    extern char VideoFilePath[ 240 ];

    //-------------------XMLInfo-------------------------//
    extern BOOL EventResultL[MAXSizeEventResult];
    extern BOOL EventResultR[MAXSizeEventResult];
#endif

//******************************************************************************
// F U N C T I O N   B O D Y S
//******************************************************************************

//---------Initialize-----------------
void CTA_WorkBuf_Allocate(void); // (oTo_WorkBuf_Allocate)internal memory alloc
bool CTA_UpdateLUT(UINT32 a_unParameterID, UCHAR * a_pData, UINT32 a_unDataSize = 0);       // (oTo_UpdateParameter) LUT, Custom Car data

#ifdef _WIN32
    bool CTA_UpdateCarInfo(UCHAR * a_pData, UINT32 a_unDataSize);  // (oTo_UpdateParameter)  Custom Car data
#else // K2 platform
    bool CTA_UpdateCarInfo(UINT32 a_CarWidth_cm, UINT32 a_RearTireToBumper_cm
						, DOUBLE a_SteerOverFrontTireRatio, UINT32 a_WheelBase_cm);  
#endif

void CTA_Reset( void );  // reset necessary stack
void setImgProcROI( CTA_CaliResult_t *i_LUT );

//---------Process-----------------
#ifdef _WIN32
    void CTA_Process(UCHAR *dst_Y, UCHAR *src_Y, UCHAR *FrameHd);
    void CTA_UpdateCarState(UCHAR *FrameHd);  // (Time/Speed/Angle) LUT, Custom Car data
#else // K2 platform
    void CTA_Process(ICP_Image *picp_src_Y);
    void CTA_UpdateCarState(UINT32 a_FrameTimeStamp_ms, FLOAT a_CraSpeed, FLOAT a_SteerAngle
				          , UINT32 a_FrameCnt);
#endif
//---------Release-----------------
void CTA_WorkBuf_Release(void); 

//---------GetResult-----------------
#define C_CTA_STATUS_LEFT_WARNING		0x01
#define C_CTA_STATUS_RIGHT_WARNING		0x02
/**
* @brief get the alarm state at this frame
* @return  [0:No alarm / 1:Right Alrm  /2:LeftAlarm / 3: Both side alarm]
*/
inline UCHAR GetResult_Alarm(void){ return CTAAlarmState; }

CandidateRec *GetResult_TargetCarsL( short &MaxNum );
CandidateRec *GetResult_TargetCarsR( short &MaxNum );



#endif // END #ifndef _CTAApi_H_

